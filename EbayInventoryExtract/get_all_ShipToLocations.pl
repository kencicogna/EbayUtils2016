#!/usr/bin/perl -w 
# generated by wxGlade 0.6.5 (standalone edition) on Fri Nov 30 13:55:30 2012
# To get wxPerl visit http://wxPerl.sourceforge.net/

#
# DESCRIPTION:  Gets list of all 'Item Specifics' and all ebay 'Categories' used in current listings
#               Valuable for analyzing existing listings. Next step might be to determine the
#               default/recommended item specifics for each category.
#

use strict;
use LWP::UserAgent;
use LWP::Simple;
use HTTP::Request;
use HTTP::Headers;
use HTML::Restrict;
use DBI;
use XML::Simple qw(XMLin XMLout);
use Date::Calc 'Today';
use Data::Dumper 'Dumper';			$Data::Dumper::Sortkeys = 1;
use File::Copy qw(copy move);
use POSIX;
use Getopt::Std;
use Storable 'dclone';

use lib '../cfg';
use EbayConfig;


###################################################
# EBAY API INFO                                   #
###################################################

# define the HTTP header
my $header = $EbayConfig::ES_http_header;

# eBayAuthToken
my $eBayAuthToken = $EbayConfig::ES_eBayAuthToken;

my $GeteBayDetailsRequest_xml = <<END_XML;
<?xml version='1.0' encoding='utf-8'?>
<GeteBayDetailsRequest xmlns="urn:ebay:apis:eBLBaseComponents">
  <RequesterCredentials>
    <eBayAuthToken>$eBayAuthToken</eBayAuthToken>
  </RequesterCredentials>
  <DetailName>ExcludeShippingLocationDetails</DetailName>    
</GeteBayDetailsRequest>
END_XML

# Regions you can ship to
#  <DetailName>ShippingLocationDetails</DetailName>    

#  Specific countries you can exclude
#  <DetailName>ExcludeShippingLocationDetails</DetailName>    

# Can't ship directly to this list of countries (for some reason)
#  <DetailName>CountryDetails</DetailName>    

###########################################################
# END EBAY API INFO                                       #
###########################################################

my $shipToLocations = {
		'AU' => 'Australia',
		'AT' => 'Austria',
		'BE' => 'Belgium',
    'BR' => 'Brazil',
		'CA' => 'Canada',
		'HR' => 'Croatia',
		'DK' => 'Denmark',
		'EE' => 'Estonia',
		'FI' => 'Finland',
		'FR' => 'France',
		'DE' => 'Germany',
		'GI' => 'Gibraltar',
		'GR' => 'Greece',
		'HK' => 'Hong Kong',
		'HU' => 'Hungary',
		'IE' => 'Ireland',
		'IL' => 'Israel',
		'IT' => 'Italy',
		'JP' => 'Japan',
		'LV' => 'Latvia',
		'LT' => 'Lithuania',
		'LU' => 'Luxembourg',
		'MY' => 'Malaysia',
		'MT' => 'Malta',
		'NL' => 'Netherlands',
		'NZ' => 'New Zealand',
		'NO' => 'Norway',
		'PL' => 'Poland',
		'PT' => 'Portugal',
    'RU' => 'Russia',
		'SG' => 'Singapore',
		'KR' => 'South Korea',
		'ES' => 'Spain',
		'SE' => 'Sweden',
		'CH' => 'Switzerland',
		'GB' => 'United Kingdom',    # a.k.a. Great Britain
  };


################################################################################
# Get list of all item id's
################################################################################

my $response = submit_request( 'GeteBayDetails', $GeteBayDetailsRequest_xml, $header );
print Dumper($response);

# Shipping Locations (Regions which you can ship)
if ( defined $response->{ShippingLocationDetails} ) {
  for my $c ( @{$response->{ShippingLocationDetails}} ) 
  {
    printf("%-10s %s\n",$c->{ShippingLocation},$c->{Description});
  }
}

# Country codes / details (you can not specify these as shipping destinations)
if ( defined $response->{CountryDetails} ) {
  for my $c ( @{$response->{CountryDetails}} ) 
  {
    printf("%-4s %s\n",$c->{Country},$c->{Description});
  }
}

# Shipping exclusions (countries you can specifically exclude from a shipping region)
if ( defined $response->{ExcludeShippingLocationDetails} ) {

  my $all_regions     = {};
  my $shipto_regions  = {};
  my $exclude_list    = {};

  for my $c ( @{$response->{ExcludeShippingLocationDetails}} ) 
  {
    printf("%-4s   %s\n",$c->{Location},$c->{Description});
    $all_regions->{ $c->{Region} }->{ $c->{Location} } = $c->{Description};
    if (defined $shipToLocations->{$c->{Location}}) {
      $shipto_regions->{ $c->{Region} }++;
    }
  }

  print "\n\nAll Regions\n";
  for my $r ( sort keys %$all_regions ) {
    printf("%s\n",$r)
  }

  print "\n\nShipto Regions\n";
  for my $r ( sort keys %$shipto_regions ) {
    printf("\n%s",$r);
    my %region_location_names = reverse %{$all_regions->{$r}};
    #for my $loc ( sort keys $all_regions->{$r} ) {
    for my $loc_name ( sort keys %region_location_names ) {
      my $ok = 'ok';
      my $abbr = $region_location_names{$loc_name};

      if ( ! defined $shipToLocations->{$abbr} ) {
        $ok='';
        $exclude_list->{ $abbr } = $all_regions->{$r}->{$abbr};     # TODO: Also need to exclude entire regions we don't ship to, in addition to the regions of specific countries 
                                                                    #       Ultimately we should set this up in site preferences and set: SellerExcludeShipToLocationsPreference='true'
      }
      printf ("\n\t%-15s  %2s %s",$abbr,$ok,$all_regions->{$r}->{$abbr});
    }
  }

  print "\n\nExclude Regions\n";
  for my $loc ( sort keys %$exclude_list ) {
    printf ("%-4s  %s\n",$exclude_list->{$loc}, $loc);
  }

}


exit;



####################################################################################################

sub submit_request {
	my ($call_name, $request, $objHeader) = @_;
  my ($objRequest, $objUserAgent, $objResponse);
  my $request_sent_attempts = 0;

	$header->remove_header('X-EBAY-API-CALL-NAME');
	$header->push_header  ('X-EBAY-API-CALL-NAME' => $call_name);

  RESEND_REQUEST:
  $request_sent_attempts++;

  # Create UserAgent and Request objects
  $objUserAgent = LWP::UserAgent->new;
  $objRequest   = HTTP::Request->new(
    "POST",
    "https://api.ebay.com/ws/api.dll",
    $objHeader,
    $request
  );

# print "\n objHeader : ",Dumper($objHeader);
# print "\n request   : ",Dumper($request);
# print "\n objRequest: ",Dumper($objRequest);

  # Submit Request
  $objResponse = $objUserAgent->request($objRequest);		# SEND REQUEST

  # Parse Response object to get Acknowledgement 
	my $content =  $objResponse->content;
	my $response_hash = XMLin( "$content",  
      ForceArray=>['InternationalShippingServiceOption','ShippingServiceOptions','ShipToLocation','Variation','NameValueList', ] );
	#my $response_hash = XMLin( $content );
  my $ack = $response_hash->{Ack};

  if (!$objResponse->is_error && $ack =~ /success/i ) {
		#print "\n\n";
		#print  "Status          : Success\n";
		#print  "Object Content  :\n";
		#print  $objResponse->content;
		#print Dumper( $response_hash );

    return $response_hash;
  }
  else {
		print "\n\n";
    print  "Response msg.   : ", Dumper( $response_hash->{Errors} );
    print  "Status          : FAILED";
    print  $objResponse->error_as_HTML;

    # Resend update request
    if ( $request_sent_attempts < 1 ) {
      print  "Attempting to resend update request.\n";
      goto RESEND_REQUEST;
    }

		die;
  }

} # end submit_request()

